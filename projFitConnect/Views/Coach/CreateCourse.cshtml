@{
    int id = ViewBag.id;
}

<h3 class="fw-bolder text-center">新增課程</h3>
<hr />
<div class="container row">
    <form method="post" action="https://localhost:7199/api/Schdule">
        <input type="text" id="coachID" name="coachID" value="@id" hidden />
        <label class="form-label mt-3" for="courseType">課程種類</label>
        <select class="form-select" id="courseType"><option selected disabled>--請選擇課程--</option></select>
        <label class="form-label mt-3" for="city">場地</label>
        <div class="d-flex flex-row w-100">
            <div class="custom-select" id="gym">
                <div class="select-selected form-select" id="selectedGym">
                    <div>--請選擇場館--</div>
                </div>
                <div class="select-items select-hide overflow-y-scroll" style="height:500px" id="gymOptions">
                    <!--放入場館選項-->
                </div>
            </div>
            <div class="custom-select" id="field">
                <div class="select-selected form-select" id="selectedField">
                    <div>--請選擇場地--</div>
                </div>
                <div class="select-items select-hide overflow-y-scroll" style="height:300px" id="fieldOptions">
                    <!--放入場地選項-->
                </div>
            </div>
        </div>

        <label class="form-label mt-3" for="date">日期</label>
        <input type="date" class="form-control" id="date" name="date"/>
        <label class="form-label mt-3" for="startTime">開始時間</label>
        <select class="form-select" id="startTime" name="startTime"></select>
        <label class="form-label mt-3" for="endTime">結束時間</label>
        <select class="form-select" id="endTime" name="endTime"></select>
        <label class="form-label mt-3" for="maxStudent">學生人數上限</label>
        <input type="number" class="form-control" id="maxStudent" name="maxStudent" />
        <label class="form-label mt-3" for="classPayment">課程費用</label>
        <input type="number" class="form-control" id="classPayment" name="classPayment" />
        <div class="mt-3">
            <input type="submit" class="btn btn-primary col-3" value="新增" />
            <input type="button" class="btn btn-danger col-3" onclick="goBack()" value="取消" />
        </div>
        
    </form>

</div>
@section Scripts {
    <script>
        const coachID = document.getElementById('coachID');
        const courseType = document.getElementById('courseType');
        const date = document.getElementById('date');
        const gymOptions = document.getElementById('gymOptions');
        const fieldOptions = document.getElementById('fieldOptions');
        const selectedGym = document.getElementById('selectedGym');
        const selectedField = document.getElementById('selectedField');
        const startTime = document.getElementById('startTime');
        const endTime = document.getElementById('endTime');

        let today = new Date();
        today.setDate(today.getDate() + 1);
        let tomorrow = today.toISOString().split('T')[0];
        date.setAttribute('min', tomorrow);

        (async () => {
            //取得教練專長
            const responseCoach = await fetch(`https://localhost:7199/api/Coach/${coachID.value}`);
            const dataCoach = await responseCoach.json();
            let options = dataCoach.coachDetailDto.experties.map(x => `<option value="${x.classID}">${x.className}</option>`);
            courseType.innerHTML += options.join("");

            //取得全部場館
            const responseGym = await fetch('https://localhost:7199/api/Gym/GetGym');
            const dataGym = await responseGym.json();
            let stringHTML = "";
            dataGym.forEach(item => {
                stringHTML += `<div class="d-flex flex-column" data-value="${item.gymId}">
                                    ${item.gymName}
                                    <div>
                                        <i class="bi bi-geo-alt-fill me-3"></i>${item.gymAddress}
                                    </div>
                                </div>`;
            });
            gymOptions.innerHTML = stringHTML;
        })();
        //選擇場館後，列出場地選項
        gymOptions.addEventListener('click', async (event) => {
            let gymId = event.target.closest('div.d-flex').getAttribute('data-value');
            const responseField = await fetch(`https://localhost:7199/api/Gym/GetField/${gymId}`);
            const dataField = await responseField.json();
            let stringHTML = "";
            dataField.forEach(item => {
                stringHTML += `<div class="d-flex flex-column" data-value="${item.fieldId}">
                                    ${item.fieldName}
                                    <div>
                                        ${item.floor} | ${item.fieldPayment}
                                    </div>
                                </div>`;
            });
            fieldOptions.innerHTML = stringHTML;
            await loadOpeningHours(); 
        });
        //加入場館營業時間
        async function loadOpeningHours() {
            const response = await fetch(`https://localhost:7199/api/Gym/GetOpeningHours/${selectedGym.getAttribute('data-value')}`);
            const data = await response.json();
            console.log(data);
            let options = data.map(x => `<option value="${x.timeId}">${x.timeName}</option>`);
            startTime.innerHTML = options.join("");
            endTime.innerHTML = options.join("");
        };
        //自訂下拉式選單
        document.addEventListener("DOMContentLoaded", function () {
            var selects = document.querySelectorAll(".custom-select");

            selects.forEach(function (select) {
                var selected = select.querySelector(".select-selected");
                var items = select.querySelector(".select-items");

                selected.addEventListener("click", function () {
                    items.classList.toggle("select-hide");
                });

                items.addEventListener("click", function (event) {
                    var target = event.target.closest("div.d-flex");
                    if (target) {
                        selected.innerHTML = target.closest("div").firstChild.textContent;
                        // console.log(target.closest("div"));
                        selected.setAttribute('data-value', target.closest("div").getAttribute('data-value'));
                        items.classList.add("select-hide");
                    }
                });

                document.addEventListener("click", function (event) {
                    if (!select.contains(event.target)) {
                        items.classList.add("select-hide");
                    }
                });
            });
        });
        //送出表單
        document.querySelector("form").addEventListener("submit", async function (event) {
            event.preventDefault();

            const courseType = document.getElementById('courseType');
            const selectedGym = document.getElementById('selectedGym');
            const selectedField = document.getElementById('selectedField');
            const startTime = document.getElementById('startTime');
            const endTime = document.getElementById('endTime');

            function createHiddenInput(name, value) {
                const input = document.createElement("input");
                input.type = "hidden";
                input.name = name;
                input.value = value;
                return input;
            }

            function appendHiddenInputs(form) {
                form.appendChild(createHiddenInput("courseId", courseType.value));
                form.appendChild(createHiddenInput("gymId", selectedGym.getAttribute('data-value')));
                form.appendChild(createHiddenInput("fieldId", selectedField.getAttribute('data-value')));
                form.appendChild(createHiddenInput("startTimeId", startTime.value));
                form.appendChild(createHiddenInput("endTimeId", endTime.value));
            }

            appendHiddenInputs(this);

            const formData = new FormData(this);

            const response = await fetch('https://localhost:7199/api/Schdule', {
                method: 'POST',
                body: formData
            });
            const data = await response.json();
            if(data.success){
                window.location.href = '@Url.Content("~/Coach/Profile")';
            }
            
        });
        function goBack() {
            window.history.back();
        };
    </script>
}
@section Styles {
    <style>
        .custom-select {
            position: relative;
            display: inline-block;
            font-size: 1rem;
            line-height: 1.5;
            width: 100%;
        }

        .select-selected {
            width: inherit;
            border: 1px solid #ccc;
            cursor: pointer;
            padding: 6px 36px 6px 12px;
        }

        .select-items {
            position: absolute;
            background-color: white;
            border: 1px solid #2c3e50;
            width: inherit;
            display: block;
            z-index: 99;
        }

            .select-items div {
                width: inherit;
                padding: 10px;
                cursor: pointer;
            }

                .select-items div:hover {
                    color: white;
                    background-color: #2c3e50;
                }

        .select-hide {
            display: none;
        }
    </style>
}