@{
    var sum = ViewBag.sum;
}
<input type="hidden" id="sum" value="@sum" />

<h3 class="fw-bolder text-center">訂單資訊</h3>
<hr />

<div class="d-flex align-items-center">
    <i class="bi bi-credit-card fs-3"></i>
    <span class="fw-bolder fs-5 mx-3">付款方式</span>
</div>

<div class="btn-group mt-3" role="group" aria-label="Basic radio toggle button group">
    <input type="radio" class="btn-check" name="btnradioPay" id="btnradio1" autocomplete="off" checked>
    <label class="btn btn-lg btn-outline-primary" for="btnradio1">LINE Pay</label>
</div>

<div class="shadow col-md-6 text-center d-flex flex-row p-3 justify-content-around mt-3">
    <div class="d-flex flex-column justify-content-center align-items-center">
        <div>使用 LINE Pay 付款</div>
        <ul style="margin:0"><li class="form-text text-muted">確認付款後，畫面將跳轉至 LINE Pay 付款頁面</li></ul>
    </div>
    <div class="align-content-center">
        <img src="~/Images/LinePay.png" style="width:84px;height:24px" />
    </div>
</div>

<div class="d-flex align-items-center mt-3">
    <i class="bi bi-receipt-cutoff fs-3"></i>
    <span class="fw-bolder fs-5 mx-3">發票</span>
</div>
<div class="btn-group mt-3" role="group" aria-label="Basic radio toggle button group">
    <input type="radio" class="btn-check" name="btnradioReceipt" id="btnradioPersonal" autocomplete="off" checked>
    <label class="btn btn-lg btn-outline-primary" for="btnradioPersonal">個人發票</label>
    <input type="radio" class="btn-check" name="btnradioReceipt" id="btnradioCompany" autocomplete="off" checked>
    <label class="btn btn-lg btn-outline-primary" for="btnradioCompany">公司發票</label>
    <input type="radio" class="btn-check" name="btnradioReceipt" id="btnradioDonate" autocomplete="off" checked>
    <label class="btn btn-lg btn-outline-primary" for="btnradioDonate">捐贈發票</label>
</div>
<div class="d-flex align-items-center mt-3">
    <i class="bi bi-person fs-3"></i>
    <span class="fw-bolder fs-5 mx-3">個人資訊</span>
</div>
<form>
    <div class="row">
        <label for="exampleInputEmail1" class="form-label mt-4">收件人姓名</label>
        <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="*請輸入姓名">
        <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
    </div>
</form>
<div id="payment-button"></div>
<button class="btn btn-success col-6 col-md-3 form-control my-5" onclick="requestPayment()" id="btnPay">前往付款</button>

@section Scripts {
    <script>
        let baseLoginPayUrl = 'https://localhost:7199/api/LinePay/';
        const sum = document.getElementById('sum').value;
        const btnradioPersonal = document.getElementById('btnradioPersonal');
        // 交易訂單資料
        const payment = {
            amount: sum,
            currency: "TWD",
            orderId: Date.now().toString(), // 使用 Timestamp 當作 orderId
            packages: [
                {
                    id: "20240609I001",
                    amount: sum,
                    name: "測試",
                    products: [
                        {
                            name: "測試商品",
                            imageUrl: "",
                            quantity: 1,
                            price: sum,
                        }
                    ]
                },
            ],
            RedirectUrls: {
                ConfirmUrl: "https://localhost:7168/LinePay/Confirm",
                CancelUrl: "https://6531-211-76-57-112.ngrok-free.app/api/LinePay/Cancel",
            },
        };

        async function requestPayment() {
            try {
                const response = await fetch(baseLoginPayUrl + 'Create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(payment),
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }

                const res = await response.json();
                window.location = res.info.paymentUrl.web;
            } catch (err) {
                console.error('Error:', err);
            }
        }
        // Render the PayPal button into #paypal-button-container
        paypal.Buttons({
            // Set up the transaction
            createOrder: function (data, actions) {
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: '88.44'
                        }
                    }]
                });
            },

            // Finalize the transaction
            onApprove: function (data, actions) {
                return actions.order.capture().then(function (orderData) {
                    console.log('Capture result', orderData,
                        JSON.stringify(orderData, null, 2));
                });
            }
        }).render('#payment-button');
    </script>
}
@section Styles {
    <style>

    </style>
}